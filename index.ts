import express, { Request as ExRequest, Response as ExResponse } from "express";
import swaggerUi from "swagger-ui-express";

import { RegisterRoutes } from "./tsoa-routes/routes.js"; // archieve generated by TSOA
import swaggerDocument from "./tsoa-routes/swagger.json" with { type: "json" }; // archieve generated by TSOA

const app = express();
const port = process.env.PORT ?? "3000";

app.use(express.json());

// Routes generated by TSOA (Swagger/mocks and validation)
RegisterRoutes(app);

const options = {
  swaggerOptions: {
    defaultModelExpandDepth: 0, // <- avoid expand all models
    defaultModelsExpandDepth: -1, // <- hide "Schemas" tab
  },
};

// Swagger UI setup
app.use("/api-docs", swaggerUi.serve, (_req: ExRequest, res: ExResponse) => {
  return res.send(swaggerUi.generateHTML(swaggerDocument, options));
});

app.listen(port, () => {
  console.log(`Server running at http://localhost:${port}`);
  console.log(`Swagger docs at http://localhost:${port}/api-docs`);
});
